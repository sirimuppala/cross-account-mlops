AWSTemplateFormatVersion: "2010-09-09"
Description: Initialize the data science environment.
Parameters: 
  UniqueID: 
    Type: String
    Default: yourinitials
    Description: Enter your initials in lower case as a unique identifier for components created 
    AllowedPattern: "^([a-z]|(d(?!d{0,2}.d{1,3}.d{1,3}.d{1,3})))([a-zd]|(.(?!(.|-)))|(-(?!.))){1,61}[a-zd.]$"
  #ToolsAccountAccessRole:
   # Type: String
    #Description: Role ARN (created in IT Tools account) that allows data science account access to IT Tools Account
  ToolsAccountID:
    Type: String
    Description: AWS Account ID of the IT Tools account.
Resources:

  DatascienceS3Bucket:
    Type: AWS::S3::Bucket
    Properties: 
      AccessControl: BucketOwnerFullControl
      VersioningConfiguration: 
        Status: Enabled
      BucketName:
        Fn::Join:
          - ""
          - - "datascience-project-"
            - !Ref UniqueID
            - "-"
            - !Select
             - 0
             - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"

  SageMakerNotebookLifecycleConfig:
    Type: AWS::SageMaker::NotebookInstanceLifecycleConfig
    Properties: 
      NotebookInstanceLifecycleConfigName: 
        Fn::Join:
          - ""
          - - "Datascience-Lifecycle-Config-"
            - !Ref UniqueID
            - "-"
            - !Select
             - 0
             - !Split
              - "-"
              - !Select
                - 2
                - !Split
                  - "/"
                  - !Ref "AWS::StackId"
      OnCreate:
        #- Content:
         # - Fn::Base64: !Join
          #  - '\n'
           # - - !Sub |
                #!/bin/bash
            #    set -e
             #   echo "export tools_bucket_name=mlops-data-model" >> /etc/profile.d/jupyter-env.sh
              #  echo "export tools_account_id=${ToolsAccountID}" >> /etc/profile.d/jupyter-env.sh
                #echo "Hello ${ToolsAccountID}"
               # initctl restart jupyter-server
             # - !Sub |
              #  sudo -i -u ec2-user bash << EOF
              #  echo "Setup the Workshop exercises"
               # pwd
               # git clone https://github.com/aws-samples/amazon-sagemaker-devops-with-ml.git
               # pwd
               # ls -la
               # cp -R /home/ec2-user/amazon-sagemaker-devops-with-ml/1-Built-In-Algorithm/* /home/ec2-user/SageMaker/

        - Content:
            Fn::Base64: !Sub |
              #!/bin/bash
              set -e

              echo "export tools_bucket_name=mlops-data-model-${ToolsAccountID}" >> /etc/profile.d/jupyter-env.sh
              echo "export tools_account_arn=arn:aws:iam::${ToolsAccountID}:role/AllowAccessToDataScienceAccountRole-${ToolsAccountID}" >> /etc/profile.d/jupyter-env.sh
              initctl restart jupyter-server

              sudo -i -u ec2-user bash << EOF
                echo "Setup the Workshop exercises"

                pwd
                git clone https://github.com/aws-samples/amazon-sagemaker-devops-with-ml.git
                pwd
                ls -la
                cp -R /home/ec2-user/amazon-sagemaker-devops-with-ml/1-Built-In-Algorithm/* /home/ec2-user/SageMaker/

  SageMakerNotebookInstance:
    Type: AWS::SageMaker::NotebookInstance
    Properties: 
      InstanceType: ml.t3.medium
      LifecycleConfigName: !GetAtt SageMakerNotebookLifecycleConfig.NotebookInstanceLifecycleConfigName
      NotebookInstanceName: 
        Fn::Join:
            - ""
            - - "Datascience-Notebook-"
              - !Ref UniqueID
      RoleArn: !GetAtt [SageMakerNotebookInstanceRole, Arn]


  SageMakerNotebookInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: sagemaker.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
          - arn:aws:iam::aws:policy/AmazonSageMakerFullAccess
          - arn:aws:iam::aws:policy/AmazonS3FullAccess
      Policies:
        - PolicyName: crossaccountaccess
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                #Resource: !Ref ToolsAccountAccessRole
                Resource:
                  Fn::Join:
                    - ""
                    - - 'arn:aws:iam::'
                      - !Ref ToolsAccountID
                      - ':role/AllowAccessToDataScienceAccountRole-'
                      - !Ref ToolsAccountID
      RoleName:
        Fn::Join:
           - ""
           - - "DataScience-SageMakerNotebookInstance-ServiceRole-"
             - !Ref UniqueID
             - "-"
             - !Select
              - 0
              - !Split
               - "-"
               - !Select
                 - 2
                 - !Split
                   - "/"
                   - !Ref "AWS::StackId"

Outputs:
      SageMakerNotebookInstance:
        Description: The ID of the SageMaker Notebook Instance
        Value: !Ref SageMakerNotebookInstance

      DataScienceS3Bucket:
        Description: S3 bucket for datascience project
        Value: !Ref DatascienceS3Bucket
